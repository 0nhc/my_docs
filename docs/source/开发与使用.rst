Development and Usage
======================

Linux and ROS Tutorials?

Simulation Environment Configuration
------------------------------------

Overview of what configuration is sufficient for a local computer and when a server is required.
Reference: \ https://docs.omniverse.nvidia.com/app_isaacsim/app_isaacsim/tutorial_core_adding_manipulator.html

Local Computer
~~~~~~~~~~~~~~

Server
~~~~~~

Real Machine Usage Configuration
--------------------------------
.. code:: sh

    # Execute this command every time you connect your PC with the USB2CAN module.
    sudo ip link set can0 up type can bitrate 1000000

Environment setup
~~~~~~~~~~~~~~~~~
.. code:: sh

    sudo apt install ros-noetic-moveit-ros-move-group ros-noetic-joy liborocos-kdl1.4 libkdl-parser
    pip install scipy
    # TODO

Compilation
~~~~~~~~~~~~~
.. code:: sh
    
    cd ~/catkin_ws/src
    git clone https://gitee.com/arx-discover/arx5_ros.git
    cd arx5_ros
    git checkout #TODO
    cd ..
    cd ~/catkin_ws
    catkin_make
    #TODO

Developing based on ROS
~~~~~~~~~~~~~~~~~~~~~~~

Manipulator Control
^^^^^^^^^^^^^^^^^^^

Manipulator Joint Control
''''''''''''''''''''''''''
This part allows us to control the state of the 6 joints of the robotic
arm. We can perform a simple test through the following process:

Suppose you have launched MoveIt node for ARX5

.. code:: sh

   roslaunch arx5_moveit arx5_moveit.launch #todo

Then try this Python Script to move the robot arm

.. code:: python

    # TODO

Manipulator Joint Angle Reading
'''''''''''''''''''''''''''''''''
Through topic /joint_states
.. code:: sh
    
   rostopic echo /joint_states

Manipulator End Effector Pose Control
''''''''''''''''''''''''''''''''''''''

This part allows us to control the state of the pose of the end
effector. We can perform a simple test through the following process:

Suppose you have launched MoveIt node for ARX5

.. code:: sh

   roslaunch arx5_moveit arx5_moveit.launch #todo

Then try this Python Script to move the robot arm

.. code:: python

    # TODO

Manipulator End Effector Pose Reading
'''''''''''''''''''''''''''''''''''''

TODO

End Effector Gripper
^^^^^^^^^^^^^^^^^^^^

Two-Finger Gripper
''''''''''''''''''

Gripper2
'''''''''

Gripper3
'''''''''

Visual Recognition
^^^^^^^^^^^^^^^^^^

Camera Raw Data Reading
''''''''''''''''''''''''

Camera Parameter Reading
''''''''''''''''''''''''

Color Recognition
''''''''''''''''''

Shape Recognition
''''''''''''''''''

Visual Grasping
^^^^^^^^^^^^^^^^^

Developing based on ROS 2
~~~~~~~~~~~~~~~~~~~~~~~~~

Developing based on Python
~~~~~~~~~~~~~~~~~~~~~~~~~~
